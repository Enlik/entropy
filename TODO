TODO list (for developers only):
- build() and world(), on enzyme, add the support for whitelist+cron
- build(), on enzyme, add license blacklist (packages that cannot be shipped in a binary form)
- system-wide: add free space check
- activator: for the tidy module I need that reagent includes the SLOT variable.
- activator tasks:
          - add/remove packages from the database
          - tidy tool: cleanup policy to prune old binaries
          - sync tool removal
          - database update and management between me and reagent
          - create a .md5 for every in upload package
- reagent tasks:
          - reagent should support a forced revision bumping

- Sabayon Linux USE flags: remove all server related use flags

Project Status:
- entropy: will handle all the three tools below
- enzyme: first release up and working (more or less)
- reagent: first release up and working.
- activator: 60%
============
- client part: not yet defined apart from equilibrium name.


Features plan:
- enzyme: distcc support on cross platforms and on automake
- activator: add stable/ repository and the cron-aware module that moves files from the unstable/default repo to the stable one.
- activator: add support for ssh (where supported) to we can md5sum the uploaded files?



Have a look at if this is solved:
Traceback (most recent call last):
  File "activator", line 100, in ?
    activatorTools.packages(options[1:])
  File "../libraries/activatorTools.py", line 222, in packages
    ftp.uploadFile(etpConst['packagessuploaddir']+"/"+item[0])
  File "../libraries/entropyTools.py", line 852, in uploadFile
    rc = self.ftpconn.storbinary("STOR "+file,f)
  File "/usr/lib/python2.4/ftplib.py", line 421, in storbinary
    return self.voidresp()
  File "/usr/lib/python2.4/ftplib.py", line 221, in voidresp
    resp = self.getresp()
  File "/usr/lib/python2.4/ftplib.py", line 207, in getresp
    resp = self.getmultiline()
  File "/usr/lib/python2.4/ftplib.py", line 193, in getmultiline
    line = self.getline()
  File "/usr/lib/python2.4/ftplib.py", line 180, in getline
    line = self.file.readline()
  File "/usr/lib/python2.4/socket.py", line 332, in readline
    data = self._sock.recv(self._rbufsize)
socket.error: (104, 'Connection reset by peer')
