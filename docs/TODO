
  0.99.20:

    - provide repository digital key, fetch it when syncing repos and check if
      it matches and all file match

  0.99.30:

    - entropy.output API names update
    - add splitdebug support?
    - entropy.tools API docs merge
    - entropy.server API rework
    - move sensible pkgs to alt dir

  0.99.40:

    - move all the portage related stuff in entropy.tools to entropy.spm
        => prototype class defining transformations (collect them from tools)

  1.0_beta1:

    - portage storing LC_* in environment?
    - complete API documentation
    - Transform Sulfur into Entropy Store:
        - UGC for more coolness
        - title change
        - more sexy UI

  1.0_beta2:

    - PackageKit integration

  1.0 - deprecations:

    - _databaseStructureUpdates (missing tables creation)
    - type argument in updateProgress
    - clientDbconn => clientdb

  2.0:

    - Abstract Source Package Manager metaphor
    - PackageKit improved support
    - UGC based on XML requests (all the commands into one string)

  Portage split install project (backward compat):

   app-office/openoffice example:
    - define EPACKAGES="core kde gnome templates java"
      => this will install:
         app-office/openoffice-core
         app-office/openoffice-kde
         app-office/openoffice-gnome
         app-office/openoffice-templates
         app-office/openoffice-java
     - src_prepare, src_unpack, src_compile are the same
     - pkg_preinst, pkg_postinst, pkg_prerm, pkg_postrm are the same
     - for every EPACKAGES entry there must be a defined epackage_${EPACKAGE}_src_install, if not: die
     - every EPACKAGES entry can have extra epackage_${EPACKAGE}_pkg_{preinst,postinst,prerm,postrm}
     - every EPACKAGES entry must feature RDEPEND/DEPEND/PDEPEND separate entries, for example:
         => EPACKAGE_${EPACKAGE}_{R,P}DEPEND
     - every EPACKAGE entry automatically depends on app-office/openoffice

