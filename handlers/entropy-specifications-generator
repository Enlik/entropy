#!/usr/bin/python
# Copyright Fabio Erculiani - Sabayon Linux 2007

# DESCRIPTION:
# this application gets a .tbz2 file as input and creates the dependency binary metafile
# that another application could handle using portage and binpackages extensions directly

import os
import sys
import string

sys.path.append('../libraries')
import entropyTools
from entropyConstants import *

# CONSTANTS
APPNAME = "entropy-specifications-generator"
APPVERSION = "1.0"
def print_help():
    print "* info  * : Sabayon Linux "+APPNAME+" (C - 2007)"
    print "* usage * : "+APPNAME+" <valid .tbz2 file>"
    print "* opts  * : --help\t\tthis output"
    print "* opts  * : --version\t\tprint version"

options = sys.argv[1:]

if (string.join(options).find("--version") != -1) or (string.join(options).find(" -V") != -1):
    entropyTools.print_generic(APPNAME+": "+APPVERSION)
    sys.exit(0)

# parameters test
if len(options) < 1 or string.join(options).find("--help") != -1 or string.join(options).find(" -h") != -1:
    print_help()
    if len(options) < 1:
	entropyTools.print_error("not enough parameters")
    sys.exit(1)

if len(options) > 2:
    print_help()
    entropyTools.print_error("too many parameters")
    sys.exit(1)

if not string.join(options).find(".tbz2"):
    entropyTools.print_error("no .tbz2 file specified")
    sys.exit(3)

validFile = False
for i in options:
    if os.path.isfile(i) and i.endswith(".tbz2"):
	validFile = True
	tbz2File = i
	break

if (not validFile):
    entropyTools.print_error("no valid .tbz2 file specified")
    sys.exit(4)


entropyTools.print_info("extracting data and calculating info for: "+tbz2File.split("/")[len(tbz2File.split("/"))-1]+" please wait...")
# fill all the info
etpData = entropyTools.extractPkgData(tbz2File)
#os.mkdir(etpConst['packagestmpdir']+"/")

# ugly, ugly way to print data without caring about type
for i in etpData:
    if (etpData[i]):
        entropyTools.print_generic(i+": "+etpData[i]+"\n")
    
# clean garbage
os.system("rm -rf "+etpConst['packagestmpdir']+"/"+etpData['name']+"-"+etpData['version'])

entropyTools.print_info("extracted: "+tbz2File+" to "+etpConst['packagessuploaddir']+" IT'S A FAKE FOR NOW")